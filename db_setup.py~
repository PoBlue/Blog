import os
import sys
from sqlalchemy import Column, Integer, String,ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import create_engine
from sqlalchemy.orm import relationship, backref

Base = declarative_base()

class Blog(Base):
	__tablename__ = 'blog'

	id = Column(Integer,primary_key=True)
	title = Column(String(50),nullable=False)
	content = Column(String(1024),nullable=False)
	time = Column(String(50),nullable=False)


class Login(Base):
	__tablename__ = 'login'

	id = Column(Integer,primary_key=True)
	user_name = Column(String(50),nullable=False)
	pwd = Column(String(50),nullable=False)
	

class Tag(Base):
	__tablename__ = 'tag'

	id = Column(Integer,primary_key=True)
	blog_id = Column(Integer,ForeignKey('blog.id'))
	tag_name = Column(String(50),nullable=False)

	blog = relationship("Blog",backref=backref('tags',order_by=id))

class Comment(Base):
	__tablename__ = 'comment'

	id = Column(Integer,primary_key=True)
	blog_id = Column(Integer,ForeignKey('blog.id'))
	from_id = Column(Integer,ForeignKey('user.id'))
	to_id = Column(Integer,ForeignKey('user.id'))
	comment = Column(String(1024),nullable=False)
	stage = Column(Integer)
	time = Column(String(50),nullable=False)

	blog = relationship("Blog",backref=backref('comments',order_by=id))
	from_user = relationship("User",foreign_keys=[from_id])
	to_user = relationship("User",foreign_keys=[to_id])
	

class User(Base):
	__tablename__ = 'user'

	id = Column(Integer,primary_key=True)
	name = Column(String(100),nullable=True)
	email = Column(String(100),nullable=True)


engine = create_engine('sqlite:///bolg.db')
Base.metadata.create_all(engine)

